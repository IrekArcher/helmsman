# metadata -- add as many key/value pairs as you want
[metadata]
org = "orgX"
maintainer = "k8s-admin"

# paths to the certificate for connecting to the cluster
# You can skip this if you use Helmsman on a machine with kubectl already connected to your k8s cluster. 
[certificates]
# caCrt = "ca.crt" # s3 bucket path
# caKey = "ca.key" # Or, a path to the file location

[settings]
kubeContext = "minikube" # will try connect to this context first, if it does not exist, it will be created using the details below
# username = "admin"
# password = "passwd.passwd" # read it from a .passwd file which you should make it ignored by git. 
# clusterURI = "https://192.168.99.100:8443" # cluster API


# define your environments and thier k8s namespaces
# syntax: environment_name = "k8s_namespace"
[namespaces]
staging = "staging" 
production = "default"


# define any private/public helm charts repos you would like to get charts from
# syntax: repo_name = "repo_url"
[helmRepos]
stable = "https://kubernetes-charts.storage.googleapis.com"
incubator = "http://storage.googleapis.com/kubernetes-charts-incubator"

# define the desired state of your applications helm charts
# each contains the following:

[apps]

    [apps.jenkins]
    name = "jenkins" # should be unique across all apps
    description = "jenkins"
    env = "staging" # maps to the namespace as defined in environmetns above
    enabled = true # change to false if you want to delete this app release [empty = flase]
    chart = "stable/jenkins" # changing the chart name means delete and recreate this chart
    version = "0.9.0"
    valuesFile = "" # leaving it empty uses the default chart values
    purge = false # will only be considered when there is a delete operation
    test = true # run the tests whenever this release is installed/upgraded/rolledback


    # [apps.vault]
    # name = "vault" # should be unique across all apps
    # description = "vault"
    # env = "staging" # maps to the namespace as defined in environmetns above
    # enabled = true # change to false if you want to delete this app release [empty = flase]
    # chart = "incubator/vault" # don't change the chart name, create a new release instead
    # version = "0.1.0"
    # valuesFile = "" # leaving it empty uses the default chart values
    # purge = false # will only be considered when there is a delete operation
    # test = true # run the tests whenever this release is installed/upgraded/rolledback
